{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/order-by.pipe.ts","./src/app/todo/todo.component.ts","./src/app/todo/todo.component.html","./src/app/service/route-guard.service.ts","./src/app/todo-list/todo-list.component.ts","./src/app/todo-list/todo-list.component.html","./src/app/service/http/http-interceptor-auth.service.ts","./src/app/SignUpRequest.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/app.module.ts","./src/app/service/authentication.service.ts","./src/app/app.constants.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/todo.ts","./src/app/service/data/todo.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAS3C,MAAM,aAAa;IAIxB,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;QAFhE,SAAI,GAAG,EAAE,CAAC;IAE0D,CAAC;IAErE,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;;0EATU,aAAa;6FAAb,aAAa;QCR1B,yEACI;QAAA,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,sEACI;QAAA,oEAAG;QAAA,uDAAkB;QAAA,gEACrB;QAAA,sFAA0B;QAAA,uEAA2B;QAAA,+DAAI;QAAA,4DAAI;QAAA,4DAAI;QACrE,4DAAM;QACV,4DAAM;;QAHK,0DAAkB;QAAlB,4FAAkB;;6FDKhB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAkD;;AAO3C,MAAM,cAAc;IAIzB;QAFA,iBAAY,GAAG,gDAAgD;IAE/C,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EAPU,cAAc;8FAAd,cAAc;QCP3B,uDAAgB;;QAAhB,iFAAgB;;6FDOH,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAoD;;AAK7C,MAAM,WAAW;IAEtB,SAAS,CAAC,KAAU,EAAE,IAAU;QAC9B,IAAI,KAAK,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;YACnD,OAAO,KAAK,CAAC;SACd;QACD,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC;QAClC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE;YACxB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACxC,OAAO,CAAC,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC;QAC/D,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACb,CAAC;;sEAdQ,WAAW;wGAAX,WAAW;6FAAX,WAAW;cAHvB,kDAAI;eAAC;gBACJ,IAAI,EAAE,SAAS;aAChB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGnB;;;;;;;;ICC7B,0EAA4E;IAAA,6EAAkB;IAAA,4DAAM;;;IACpG,0EAA8E;IAAA,kFAAuB;IAAA,4DAAM;;;IAC3G,0EAA+E;IAAA,oGAAyC;IAAA,4DAAM;;ADKzH,MAAM,aAAa;IAMxB,YAAoB,WAAwB,EAClC,qBAA4C,EAC5C,KAAqB,EACrB,MAAc;QAHJ,gBAAW,GAAX,WAAW,CAAa;QAClC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE7B,QAAQ;QAEN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAE3C,IAAI,CAAC,IAAI,GAAG,IAAI,0CAAI,EAAE,CAAC;QAEvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,EAAE;QAEjE,IAAG,IAAI,CAAC,EAAE,IAAE,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC;iBAChD,SAAS,CACR,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CACzB;SACN;IAEH,CAAC;IAED,QAAQ;QACN,IAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,QAAQ;YAC1B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC;iBAChD,SAAS,CACR,IAAI,CAAC,EAAE;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;YACrC,CAAC,CACF;SACN;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;iBACzD,SAAS,CACR,IAAI,CAAC,EAAE;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;YACrC,CAAC,CACF;SACN;IACH,CAAC;;0EA9CU,aAAa;6FAAb,aAAa;;QCX1B,yEAEE;QAAA,qEAAI;QAAA,+DAAI;QAAA,4DAAK;QAEb,yGAA4E;QAC5E,yGAA8E;QAC9E,yGAA+E;QAE/E,6EACE;QADI,qSAAiC,cAAU,IAAC;QAChD,8EACE;QAAA,wEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,+EAGF;QAFQ,4LAA8B;QADpC,4DAGF;QAAA,4DAAW;QAEX,+EACI;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,+EAIJ;QAFI,2LAA0C;;QAF1C,4DAIJ;QAAA,4DAAW;QAEX,+EACI;QAAA,2EAA8G;QAAA,mEAC9G;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QAC3B,4DAAW;QAEX,8EAA8C;QAAA,gEAAI;QAAA,4DAAS;QAC3D,0EACA;QAAA,yEAAiE;QAAA,gEAAI;QAAA,4DAAI;QAC3E,4DAAO;QACT,4DAAM;;;;;QA7B6B,0DAA0C;QAA1C,0FAA0C;QAC1C,0DAA4C;QAA5C,0FAA4C;QAC5C,0DAA6C;QAA7C,0FAA6C;QAMpE,0DAA8B;QAA9B,yFAA8B;QAOlC,0DAAgD;QAAhD,wKAAgD;QAMkB,0DAAqB;QAArB,kFAAqB;;6FDdlF,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAMpC,MAAM,iBAAiB;IAE5B,YACU,qBAA4C,EAC5C,MAAc;QADd,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,WAAM,GAAN,MAAM,CAAQ;IAClB,CAAC;IAEL,WAAW,CAAC,KAA6B,EAAE,KAA0B;QAEnE,IAAI,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE;YAC7C,OAAO,IAAI,CAAC;QAEd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAEhC,OAAO,KAAK,CAAC;IACf,CAAC;;kFAfQ,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICGlD,yEAAiD;IAAA,uDAAW;IAAA,4DAAM;;;IAAjB,0DAAW;IAAX,+EAAW;;;;IAepD,qEACI;IAAA,qEAAI;IAAA,2EAAwG;IAAlE,+WAA2C;IAAjF,4DAAwG;IAAA,4DAAK;IACjH,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAAsC;;;IAAA,4DAAK;IAC/C,qEAAI;IAAA,wDAAwC;;;IAAA,4DAAK;IACjD,sEAAI;IAAA,wDAA4B;IAAA,4DAAK;IACrC,sEAAI;IAAA,6EAA8D;IAAtD,gWAA6B;IAAyB,kEAAM;IAAA,4DAAS;IAAC,oEAClF;IAAA,6EAA8D;IAAtD,gWAA6B;IAAyB,kEAAM;IAAA,4DAAS;IAAA,4DAAK;IACtF,4DAAK;;;IAPqF,0DAAqB;IAArB,iFAAqB;IACvG,0DAAoB;IAApB,oFAAoB;IACpB,0DAAsC;IAAtC,qNAAsC;IACtC,0DAAwC;IAAxC,0NAAwC;IACxC,0DAA4B;IAA5B,4FAA4B;;ADXrC,MAAM,iBAAiB;IAM5B,YACU,WAAuB,EACvB,qBAA4C,EAC5C,MAAe;QAFf,gBAAW,GAAX,WAAW,CAAY;QACvB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,WAAM,GAAN,MAAM,CAAS;IACrB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,CAAC;QAClE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACxD,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,CAAC,CACF;IACH,CAAC;IAED,UAAU,CAAC,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,EAAE,CAAE;QACjC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,SAAS,CACtD,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,cAAc,CAAC;YAClD,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CACF;IACH,CAAC;IAED,UAAU,CAAC,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,kBAAkB,CAAC,IAAI,EAAE,EAAE;QACzB,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,SAAS,CACpE,QAAQ,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CACF;IACH,CAAC;;kFArDU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,yEACA;QAAA,qEAAK;QAAA,sEAAU;QAAA,4DAAK;QAEpB,6GAAiD;QAEjD,yEACE;QAAA,2EACE;QAAA,wEACE;QAAA,qEACE;QAAA,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACjB,4DAAK;QACP,4DAAQ;QACR,yEACI;QAAA,+GACI;;QAQR,4DAAQ;QAEV,4DAAQ;QAER,0EACI;QAAA,6EAAoD;QAA5C,0IAAS,aAAS,IAAC;QAAyB,+DAAG;QAAA,4DAAS;QACpE,4DAAM;QAER,4DAAM;QACN,4DAAM;;QAjC2B,0DAAe;QAAf,6EAAe;QAepC,2DAAiD;QAAjD,+JAAiD;;6FDNhD,iBAAiB;cAN7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,0BAA0B;IAErC,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAI,CAAC;IAErE,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAEpD,MAAM,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,EAAE,CAAC;QACjF,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,CAAC;QAEnE,IAAI,qBAAqB,IAAI,QAAQ,EAAE;YACrC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAG;oBACT,aAAa,EAAG,qBAAqB;iBACtC;aACF,CAAC,CAAC;SACN;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;oGAjBU,0BAA0B;6GAA1B,0BAA0B,WAA1B,0BAA0B,mBAFzB,MAAM;6FAEP,0BAA0B;cAHtC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,aAAa;CAKzB;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,MAAM,CAAC;KAChB;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,sEAAqB;QAErB,2EAA+B;QAE/B,wEAAyB;;6FDEZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,aAAa;IAExB,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAI,CAAC;IAErE,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCR1B,yEACI;QAAA,yEACI;QAAA,sEAAK;QAAA,uEACD;QAAA,uEAAW;QAAA,4DAAI;QAAA,4DAAM;QAEzB,wEACI;QAAA,qEAAI;QAAA,uEAAwC;QAAA,+DAAI;QAAA,4DAAI;QAAA,4DAAK;QACzD,qEAAI;QAAA,wEAA6C;QAAA,qEAAS;QAAA,4DAAI;QAAA,4DAAK;QACvE,4DAAK;QAEL,yEACQ;QAAA,sEAAI;QAAA,wEAAyC;QAAA,iEAAK;QAAA,4DAAI;QAAA,4DAAK;QAC3D,sEAAI;QAAA,wEAA0C;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAK;QAE9D,sEAAI;QAAA,wEAA0C;QAAA,kEAAM;QAAA,4DAAI;QAAA,4DAAK;QACrE,4DAAK;QACT,4DAAM;QACV,4DAAS;;6FDTI,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACE;AAEa;AACT;AACU;AACA;AACH;AACc;AACd;AACM;AACA;AACN;AACqB;AACe;AAC9B;AACd;;AA4BvC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBALT;QACT,EAAC,OAAO,EAAE,uEAAiB,EAAE,QAAQ,EAAE,uGAA0B,EAAE,KAAK,EAAE,IAAI,EAAC;KAChF,YARQ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,sEAAgB;SACjB;mIAMU,SAAS,mBAvBlB,2DAAY;QACZ,qEAAc;QACd,qEAAc;QACd,kEAAa;QACb,gFAAiB;QACjB,kEAAa;QACb,yEAAe;QACf,yEAAe;QACf,mEAAa;QACb,yEAAe;QACf,2DAAW,aAGX,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,sEAAgB;6FAOP,SAAS;cAzBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,qEAAc;oBACd,kEAAa;oBACb,gFAAiB;oBACjB,kEAAa;oBACb,yEAAe;oBACf,yEAAe;oBACf,mEAAa;oBACb,yEAAe;oBACf,2DAAW;iBACZ;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,sEAAgB;iBACjB;gBACD,SAAS,EAAE;oBACT,EAAC,OAAO,EAAE,uEAAiB,EAAE,QAAQ,EAAE,uGAA0B,EAAE,KAAK,EAAE,IAAI,EAAC;iBAChF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACA;AAGR;;;AAI5B,MAAM,KAAK,GAAG,OAAO;AACrB,MAAM,kBAAkB,GAAG,mBAAmB;AAK9C,MAAM,qBAAqB;IAIhC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,IAAI,CAAC;IACZ,CAAC;IAED,+BAA+B,CAAC,QAAgB,EAAE,QAAgB;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,sDAAO,aAAa,EAAC;YACvB,QAAQ,EAAC,QAAQ;SACjB,CAAC,CAAC,IAAI,CACL,0DAAG,CACD,IAAI,CAAC,EAAE;YACL,cAAc,CAAC,OAAO,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;YACrD,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC;QACd,CAAC,CACF,CACF,CAAC;IACN,CAAC;IAED,oBAAoB;QAClB,OAAO,cAAc,CAAC,OAAO,CAAC,kBAAkB,CAAC;IACnD,CAAC;IAED,qBAAqB;QACnB,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,OAAO,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC;IACxC,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,kBAAkB,CAAC;QACrD,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC;IACzB,CAAC;IAED,MAAM;QACJ,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC;QAC7C,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC;IAClC,CAAC;IACD,gBAAgB,CAAC,QAAe,EAAC,QAAe;QAE9C,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC;IAEnB,CAAC;IAED,uBAAuB,CAAC,aAA4B;QAElD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,sDAAO,gBAAgB,EAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;;0FArDU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACbD;AAAA;AAAO,MAAM,OAAO,GAAG,8BAA8B;;;;;;;;;;;;;ACArD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,4EACI;QAAA,yEACI;QAAA,0EAAyB;QAAA,mFAAwB;QAAA,4DAAO;QAC5D,4DAAM;QAEV,4DAAS;;6FDEI,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,eAAe;IAE1B,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAI,CAAC;IAErE,QAAQ;QACN,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;IACtC,CAAC;;8EANU,eAAe;+FAAf,eAAe;QCR5B,yEACI;QAAA,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAC3B,uEAAiD;QAAA,2EAAgB;QAAA,4DAAI;QACzE,4DAAM;;6FDKO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACD;;;;;;;ICE/C,0EAAuD;IAAA,uDAAiB;IAAA,4DAAM;;;IAAvB,0DAAiB;IAAjB,qFAAiB;;;IACxE,0EAAyD;IAAA,uDAA2B;IAAA,4DAAM;;;IAAjC,0DAA2B;IAA3B,+FAA2B;;;IACpF,0EAAgF;IAAA,6EAAkB;IAAA,4DAAM;;;IACxG,0EAA2E;IAAA,oFAAyB;IAAA,4DAAM;;;IAC1G,0EAA8E;IAAA,wGAA6C;IAAA,4DAAM;;ADG5H,MAAM,eAAe;IAM1B,YACU,qBAA4C,EAC5C,KAAqB,EACrB,MAAc;QAFd,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,IAAI,4DAAa,EAAE,CAAC;IAC3C,CAAC;IAED,MAAM,CAAC,UAAU;QACf,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,UAAU,CAAC,KAAK,CAAC;aAC7D,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;QAC3C,CAAC,CACF;IACT,CAAC;;8EA5BU,eAAe;+FAAf,eAAe;;QCT5B,yEACE;QAAA,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,2GAAuD;QACvD,2GAAyD;QACzD,2GAAgF;QAChF,2GAA2E;QAC3E,2GAA8E;QAE9E,6EACE;QADI,wSAAmC,eAAkB,IAAC;QAC1D,+EACE;QAAA,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,+EAGF;QAFQ,gMAAgC;QADtC,4DAGF;QAAA,4DAAW;QAEX,+EACI;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,0EAEJ;QAAA,4DAAW;QAEX,+EACI;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,4EAGJ;QAAA,4DAAW;QAEX,+EACI;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EAGJ;QAAA,4DAAW;QAEX,8EAA8C;QAAA,mEAAO;QAAA,4DAAS;QAC9D,8FACoB;QAAA,yEAAiD;QAAA,sEAAU;QAAA,4DAAI;QACrF,4DAAO;QACT,4DAAM;;;;;QAtC6B,0DAAqB;QAArB,mFAAqB;QACrB,0DAAuB;QAAvB,qFAAuB;QACvB,0DAA8C;QAA9C,0FAA8C;QAC9C,0DAAyC;QAAzC,0FAAyC;QACzC,0DAA4C;QAA5C,0FAA4C;QAMnE,0DAAgC;QAAhC,2FAAgC;QAOpC,0DAAkC;QAAlC,+FAAkC;QAMlC,0DAA+B;QAA/B,4FAA+B;QAO/B,0DAAkC;QAAlC,+FAAkC;;6FDvB7B,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACA;AACH;AACc;AACR;AACN;AACY;AACN;;;AAG5D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAC;IACtC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAC;IAC7C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC,EAAE;IAC/E,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,kEAAa,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC,EAAE;IACjF,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC,EAAE;IAC3E,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,gFAAiB,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC,EAAE;IACpF,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kEAAa,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC,EAAE;IAChF,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,qEAAc,EAAC;CACzC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICGhD,0EAAsD;IAAA,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,oFAAgB;;ADMjE,MAAM,cAAc;IAOzB,YAAoB,MAAc,EAAU,qBAA4C;QAApE,WAAM,GAAN,MAAM,CAAQ;QAAU,0BAAqB,GAArB,qBAAqB,CAAuB;QALxF,aAAQ,GAAG,MAAM;QACjB,aAAQ,GAAG,QAAQ;QACnB,iBAAY,GAAG,qBAAqB;QACpC,iBAAY,GAAG,KAAK;IAEwE,CAAC;IAE7F,QAAQ;IACR,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,qBAAqB,CAAC,+BAA+B,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;aACnF,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,CAAC,YAAY,GAAG,KAAK;QAC3B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,IAAI;QAC1B,CAAC,CACF;IACP,CAAC;;4EAzBU,cAAc;8FAAd,cAAc;QCR3B,yEACA;QAAA,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QACb,0GAAsD;QACtD,yEAA8B;QAAA,mIAAwE;QAAA,4DAAM;QAE5G,uEACE;QAAA,yEACI;QAAA,2EAAsB;QAAA,uEAAY;QAAA,4DAAQ;QAC1C,4EACJ;QAD4D,qLAAsB;QAA9E,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,4EAAsB;QAAA,uEAAY;QAAA,4DAAQ;QAC1C,4EACJ;QADgE,qLAAsB;QAAlF,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,6EAA6D;QAArD,uIAAQ,wBAAoB;QAAyB,iEAAK;QAAA,4DAAS;QAC3E,0EACA;QAAA,wEAA8D;QAAA,mEAAO;QAAA,4DAAI;QAC7E,4DAAM;QACR,4DAAO;QACT,4DAAM;;QAlB6B,0DAAoB;QAApB,kFAAoB;QAMS,0DAAsB;QAAtB,iFAAsB;QAIlB,0DAAsB;QAAtB,iFAAsB;;6FDJ7E,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAO,MAAM,IAAI;CAOhB;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGK;;;AAKzC,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,gBAAgB,CAAC,QAAQ;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,6DAAO,UAAU,QAAQ,QAAQ,CAAC,CAAC;IACrE,CAAC;IAED,UAAU,CAAC,QAAQ,EAAE,EAAE;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,6DAAO,UAAU,QAAQ,UAAU,EAAE,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,YAAY,CAAC,QAAQ,EAAE,EAAE;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,6DAAO,UAAU,QAAQ,UAAU,EAAE,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,UAAU,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACd,GAAG,6DAAO,UAAU,QAAQ,UAAU,EAAE,EAAE,EAClC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,UAAU,CAAC,QAAQ,EAAE,IAAI;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACX,GAAG,6DAAO,UAAU,QAAQ,QAAQ,EAChC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,kBAAkB,CAAC,QAAQ,EAAE,IAAU,EAAE,EAAE;QACzC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,6DAAO,UAAU,QAAQ,UAAU,EAAE,EAAE,EACtC,IAAI,CAAC,CAAC;IACd,CAAC;;sEAjCU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { ConcatSource } from 'webpack-sources';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  name = \"\";\n\n  constructor(private authenticationService :AuthenticationService) { }\n\n  ngOnInit() {\n    this.name = this.authenticationService.getAuthenticatedUser();\n    console.log(this.name);\n  }\n\n}\n","\n<div class=\"container\">\n    <H1>Home Page</H1>\n    <div>\n        <p>Welcome {{name}}. <br>\n        You can manage your todos <a routerLink=\"/todo-list\">here</a></p>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = \"An Error Occured! Contact Support at *** - ***\"\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","{{errorMessage}}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderBy'\n})\nexport class OrderByPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value == null || typeof args[0] === \"undefined\") {\n      return value;\n    }\n    let direction = args[0][0];\n    let column = args.replace('-','');\n    value.sort((a: any, b: any) => {\n          let left = Number(new Date(a[column]));\n          let right = Number(new Date(b[column]));\n          return (direction === \"-\") ? right - left : left - right;\n    });\n    return value;\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TodoService } from './../service/data/todo.service';\nimport { Todo } from '../todo';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  id:number\n  todo: Todo\n  username: string;\n\n  constructor(private todoService: TodoService,\n    private authenticationService: AuthenticationService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n\n    this.id = this.route.snapshot.params['id'];\n    \n    this.todo = new Todo();\n\n    this.username = this.authenticationService.getAuthenticatedUser()\n    \n    if(this.id!=-1) {\n      this.todoService.retrieveTodo(this.username, this.id)\n          .subscribe (\n            data => this.todo = data\n          )\n    }\n\n  }\n\n  saveTodo() {\n    if(this.id == -1) { //=== ==\n      this.todoService.createTodo(this.username, this.todo)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.router.navigate(['todo-list'])\n            }\n          )\n    } else {\n      this.todoService.updateTodo(this.username, this.id, this.todo)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.router.navigate(['todo-list'])\n            }\n          )\n    }\n  }\n\n}\n","<div class=\"container\">\n\n  <H1>Todo</H1>\n\n  <div class=\"alert alert-warning\" *ngIf=\"todoForm.dirty && todoForm.invalid\">Enter valid values</div>\n  <div class=\"alert alert-warning\" *ngIf=\"todoForm.dirty && targetDate.invalid\">Enter valid Target Date</div>\n  <div class=\"alert alert-warning\" *ngIf=\"todoForm.dirty && description.invalid\">Enter atleast 5 characters in Description</div>\n  \n  <form (ngSubmit)=\"!todoForm.invalid && saveTodo()\" #todoForm=\"ngForm\" name=\"todoForm\">\n    <fieldset class=\"form-group\">\n      <label>Description</label>\n      <input type=\"text\" #description=\"ngModel\" \n            [(ngModel)]=\"todo.description\" class=\"form-control\" \n                name=\"description\" required=\"required\" minlength=\"5\">\n    </fieldset>\n\n    <fieldset class=\"form-group\">\n        <label>Target Date</label>\n        <input type=\"date\" #targetDate=\"ngModel\"\n        [ngModel]=\"todo.targetDate | date:'yyyy-MM-dd' \"\n        (ngModelChange)=\"todo.targetDate = $event\"\n        class=\"form-control\" name=\"targetDate\" required=\"required\" >\n    </fieldset>\n    \n    <fieldset class=\"form-group\">\n        <input class=\"toggle\" #done=\"ngModel\" name=\"done\" type=\"checkbox\" [ngModel]=\"todo.done\" [checked]=\"todo.done\">&nbsp;\n        <label>Is Done?</label>\n    </fieldset>\n\n    <button type=\"submit\" class=\"btn btn-success\">Save</button>\n    &nbsp;&nbsp;\n    <a class=\"btn btn-default btn-secondary\" routerLink=\"/todo-list\">Back</a>\n  </form>  \n</div>","import { AuthenticationService } from './authentication.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService {\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private router: Router\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n      if (this.authenticationService.isUserLoggedIn())\n        return true;\n  \n      this.router.navigate(['login']);\n  \n      return false;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Todo } from '../todo';\nimport { TodoService } from '../service/data/todo.service';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\n\nexport class TodoListComponent implements OnInit {\n\n  todos: Todo[];\n  message: string;\n  private username : string; \n\n  constructor(\n    private todoService:TodoService,\n    private authenticationService: AuthenticationService,\n    private router : Router\n  ) { }\n\n  ngOnInit() {\n    this.username = this.authenticationService.getAuthenticatedUser();\n    this.refreshTodos();\n  }\n\n  refreshTodos(){\n    this.todoService.retrieveAllTodos(this.username).subscribe(\n      response => {\n        console.log(response);\n        this.todos = response;\n      }\n    )\n  }\n\n  deleteTodo(id) {\n    console.log(`delete todo ${id}` )\n    this.todoService.deleteTodo(this.username, id).subscribe (\n      response => {\n        console.log(response);\n        this.message = `Delete of Todo ${id} Successful!`;\n        this.refreshTodos();\n      }\n    )\n  }\n\n  updateTodo(id) {\n    console.log(`update ${id}`)\n    this.router.navigate(['todos',id])\n  }\n\n  addTodo() {\n    this.router.navigate(['todos',-1])\n  }\n\n  toggleTodoComplete(todo, id) {\n    this.todoService.toggleTodoComplete(this.username, todo, id).subscribe(\n      response => {\n        console.log(response);\n        this.refreshTodos();\n      }\n    )\n  }\n}","<div class=\"container\">\n<h1> Todo List </h1>\n\n<div class=\"alert alert-success\" *ngIf='message'>{{message}}</div>\n\n<div class=\"container\">\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th>is Done?</th>\n        <th>Description</th>\n        <th>Target Date</th>\n        <th>Modified Date</th>\n        <th>is Completed?</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let todo of todos |orderBy:'-targetDate'\">\n            <td><input class=\"toggle\" type=\"checkbox\" (click)=\"toggleTodoComplete(todo, todo.id)\" [checked]=\"todo.done\"></td>\n            <td>{{todo.description}}</td>\n            <td>{{todo.targetDate | date | uppercase}}</td>\n            <td>{{todo.modifiedDate | date | uppercase}}</td>\n            <td>{{todo.done ? 'Yes' : 'No'}}</td>\n            <td><button (click)=\"updateTodo(todo.id)\" class=\"btn btn-success\">Update</button> &nbsp;\n            <button (click)=\"deleteTodo(todo.id)\" class=\"btn btn-warning\">Delete</button></td>\n        </tr>\n    </tbody>\n\n  </table>\n\n  <div class=\"row\">\n      <button (click)=\"addTodo()\" class=\"btn btn-success\">Add</button>\n  </div>\n\n</div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { AuthenticationService } from '../authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpInterceptorAuthService implements HttpInterceptor{\n\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n\n    const basicAuthHeaderString = this.authenticationService.getAuthenticatedToken();\n    const username = this.authenticationService.getAuthenticatedUser();\n\n    if (basicAuthHeaderString && username) {\n      request = request.clone({\n        setHeaders : {\n            Authorization : basicAuthHeaderString\n          }\n        });\n    }\n    return next.handle(request);\n  }\n}\n","export class SignUpRequest {\n    name: string;\n    username: string;\n    email: string;\n    password: string;\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo';\n}\n","\n<app-menu></app-menu>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n}\n","<header>\n    <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <div><a routerLink=\"/home\" class=\"navbar-brand\">\n            Online TODO</a></div>\n\n        <ul class=\"navbar-nav\">\n            <li><a  routerLink=\"/home\" class=\"nav-link\">Home</a></li>\n            <li><a  routerLink=\"/todo-list\" class=\"nav-link\">Todo List</a></li>\n        </ul>\n\n        <ul class=\"navbar-nav navbar-collapse justify-content-end\">\n                <li><a  routerLink=\"/login\" class=\"nav-link\">Login</a></li>\n                <li><a  routerLink=\"/signup\" class=\"nav-link\">Sign Up</a></li>\n                <!-- <li><span class=\"nav-link\"></span></li> -->\n                <li><a  routerLink=\"/logout\" class=\"nav-link\">Logout</a></li>\n        </ul>\n    </nav>\n</header>\n<!-- *ngIf=\"authenticationService.isUserLoggedIn() -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\nimport { HomeComponent } from './home/home.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { HttpInterceptorAuthService } from './service/http/http-interceptor-auth.service';\nimport { SignupComponent } from './signup/signup.component';\nimport { OrderByPipe } from './order-by.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ErrorComponent,\n    HomeComponent,\n    TodoListComponent,\n    MenuComponent,\n    FooterComponent,\n    LogoutComponent,\n    TodoComponent,\n    SignupComponent,\n    OrderByPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorAuthService, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { API_URL } from '../app.constants';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport {map} from 'rxjs/operators';\nimport { SignUpRequest } from '../SignUpRequest';\nimport { User } from '../model/user';\n\nexport const TOKEN = 'token'\nexport const AUTHENTICATED_USER = 'authenticaterUser'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  public user:User;\n\n  constructor(private http: HttpClient) { \n    this.user;\n  }\n\n  executeJWTAuthenticationService(username: string, password: string) {\n    return this.http.post<any>(\n      `${API_URL}/user/login`,{\n       username,password\n      }).pipe(\n        map(\n          data => {\n            sessionStorage.setItem(AUTHENTICATED_USER, username);\n            sessionStorage.setItem(TOKEN, `Bearer ${data.token}`);\n            return data;\n          }\n        )\n      );\n  }\n\n  getAuthenticatedUser() {\n    return sessionStorage.getItem(AUTHENTICATED_USER)\n  }\n\n  getAuthenticatedToken() {\n    if (this.getAuthenticatedUser())\n      return sessionStorage.getItem(TOKEN)\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(AUTHENTICATED_USER)\n    return !(user === null)\n  }\n\n  logout(){\n    sessionStorage.removeItem(AUTHENTICATED_USER)\n    sessionStorage.removeItem(TOKEN)\n  }\n  createUserObject(username:string,password:string)\n  {\n    this.user.username=username;\n    this.user.password=password;\n    return this.user;\n\n  }\n\n  executeJWTSignUpService(signUpRequest: SignUpRequest) {\n    \n    return this.http.post<SignUpRequest>(\n      `${API_URL}/user/register`,signUpRequest);\n  }\n}","export const API_URL = \"http://localhost:8081/api/v1\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer class=\"footer\">\n    <div class=\"container\">\n        <span class=\"text-muted\">All Rights Reserved 2019</span>\n    </div>\n\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n    this.authenticationService.logout();\n  }\n\n}\n","<div class=\"container\">\n    <H1>You are logged out</H1>\n    <a class=\"btn btn-secondary\" routerLink=\"/login\">Login here Again</a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SignUpRequest } from '../SignUpRequest';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  errorResponse: any;\n  successResponse: any;\n  signUpRequest: SignUpRequest;\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.signUpRequest = new SignUpRequest();\n  }\n\n  signup(signupForm) {\n    this.authenticationService.executeJWTSignUpService(signupForm.value)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.successResponse = data;\n            },\n            error => {\n              console.log(error)\n              this.errorResponse = error.error.message;\n            }\n          )\n  }\n\n}\n","\n<div class=\"container\">\n  <H1>Sign Up</H1>\n  <div class=\"alert alert-warning\" *ngIf=\"errorResponse\">{{errorResponse}}</div>\n  <div class=\"alert alert-success\" *ngIf=\"successResponse\">{{successResponse.message}}</div>\n  <div class=\"alert alert-warning\" *ngIf=\"signupForm.dirty && signupForm.invalid\">Enter valid values</div>\n  <div class=\"alert alert-warning\" *ngIf=\"signupForm.dirty && email.invalid\">Enter valid email address</div>\n  <div class=\"alert alert-warning\" *ngIf=\"signupForm.dirty && password.invalid\">Password length should be in between 6 and 20</div>\n  \n  <form (ngSubmit)=\"!signupForm.invalid && signup(signupForm)\" #signupForm=\"ngForm\">\n    <fieldset class=\"form-group\">\n      <label>Name</label>\n      <input type=\"text\" #name=\"ngModel\" \n            [(ngModel)]=\"signUpRequest.name\" class=\"form-control\" \n                name=\"name\" required=\"required\">\n    </fieldset>\n\n    <fieldset class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" #username=\"ngModel\"\n        [ngModel]=\"signUpRequest.username\" class=\"form-control\" name=\"username\" required=\"required\" >\n    </fieldset>\n\n    <fieldset class=\"form-group\">\n        <label>Email</label>\n        <input type=\"email\" #email=\"ngModel\"\n        [ngModel]=\"signUpRequest.email\"\n        class=\"form-control\" name=\"email\" required=\"required\" >\n    </fieldset>\n\n    <fieldset class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" #password=\"ngModel\"\n        [ngModel]=\"signUpRequest.password\"\n        class=\"form-control\" name=\"password\" required=\"required\" minlength=\"6\" and maxlength=\"20\">\n    </fieldset>\n<!-- {{signupForm.value | json }} -->\n    <button type=\"submit\" class=\"btn btn-success\">Sign Up</button>\n    &nbsp;&nbsp;\n    Already Registered? <a class=\"btn btn-secondary\" routerLink=\"/login\">Login here</a>\n  </form>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\nimport { HomeComponent } from './home/home.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { RouteGuardService } from './service/route-guard.service';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'signup', component: SignupComponent},\n  { path: 'logout', component: LogoutComponent, canActivate:[RouteGuardService] },\n  { path: 'home/:name', component: HomeComponent, canActivate:[RouteGuardService] },\n  { path: 'home', component: HomeComponent, canActivate:[RouteGuardService] },\n  { path: 'todo-list', component: TodoListComponent, canActivate:[RouteGuardService] },\n  { path: 'todos/:id', component: TodoComponent, canActivate:[RouteGuardService] },\n  { path: '**', component: ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username = 'test'\n  password = 'pwd123'\n  errorMessage = 'Invalid Credentials'\n  invalidLogin = false\n\n  constructor(private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n  handleJWTAuthLogin() {\n    this.authenticationService.executeJWTAuthenticationService(this.username, this.password)\n        .subscribe(\n          data => {\n            console.log(data)\n            this.router.navigate(['home', this.username])\n            this.invalidLogin = false\n          },\n          error => {\n            console.log(error)\n            this.invalidLogin = true\n          }\n        )\n  }\n\n}","\n<div class=\"container\">\n<H1>Login!</H1>\n  <div class=\"alert alert-warning\" *ngIf='invalidLogin'>{{errorMessage}}</div>\n  <div class=\"alert alert-info\">For demo purpose, default username: test and password:pwd123 is provided</div>\n\n  <form>\n    <div class=\"form-group\">      \n        <label for=\"username\">User Name : </label>\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"username\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password  : </label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"password\">\n    </div>\n    <div class=\"form-group\">\n        <button (click)=handleJWTAuthLogin() class=\"btn btn-success\">Login</button>\n        &nbsp;&nbsp;\n        <a class=\"btn btn-default btn-secondary\" routerLink=\"/signup\">Sign Up</a>\n    </div>\n  </form>\n</div>","export class Todo {\n    id: number;\n    description: string;\n    done: boolean;\n    targetDate: Date;\n    createdDate: Date;\n    modifiedDate: Date;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Todo } from 'src/app/todo';\nimport { API_URL } from 'src/app/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  constructor(private http: HttpClient) { }\n\n  retrieveAllTodos(username) {\n    return this.http.get<Todo[]>(`${API_URL}/users/${username}/todos`);    \n  }\n\n  deleteTodo(username, id){\n    return this.http.delete(`${API_URL}/users/${username}/todos/${id}`);\n  }\n\n  retrieveTodo(username, id){\n    return this.http.get<Todo>(`${API_URL}/users/${username}/todos/${id}`);\n  }\n\n  updateTodo(username, id, todo){\n    return this.http.put(\n          `${API_URL}/users/${username}/todos/${id}`\n                , todo);\n  }\n\n  createTodo(username, todo){\n    return this.http.post(\n              `${API_URL}/users/${username}/todos`\n                , todo);\n  }\n\n  toggleTodoComplete(username, todo: Todo, id){\n    todo.done = !todo.done;\n    return this.http.put(\n      `${API_URL}/users/${username}/todos/${id}`\n        , todo);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}